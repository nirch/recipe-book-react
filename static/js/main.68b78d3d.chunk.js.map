{"version":3,"sources":["logo.svg","components/RecipeNavbar.js","pages/HomePage.js","pages/LoginPage.js","components/RecipeCard.js","pages/RecipesPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RecipeNavbar","props","state","redirectToHome","logout","bind","this","handleLogout","window","location","hash","setState","activeUser","to","signupLink","Nav","Link","href","loginLink","logoutLink","onClick","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","className","React","Component","HomePage","Jumbotron","Container","Button","variant","LoginPage","invalidLogin","successLogin","emailInput","createRef","pwdInput","login","users","newActiveUser","i","length","email","current","value","pwd","handleLogin","Alert","show","Form","Group","controlId","Label","Control","ref","type","placeholder","Text","block","RecipeCard","recipe","Card","Img","src","img","Body","Title","name","desc","RecipesPage","showModal","openModal","closeModal","createRecipe","nameInput","descInput","imgInput","newRecipe","addRecipe","recipes","recipesCards","map","Col","key","lg","md","fname","Row","Modal","onHide","size","Header","closeButton","as","column","sm","Footer","App","allUsers","jsonUsers","allRecipes","jsonRecipes","activeUserRecipes","console","log","filter","userId","concat","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68b78d3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass RecipeNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirectToHome: false\r\n        }\r\n\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        this.props.handleLogout();\r\n\r\n        if (window.location.hash != \"#/\") {\r\n            this.setState({redirectToHome: true})\r\n        }\r\n    }\r\n\r\n    // // this function in onvoked after every render (but not the first)\r\n    // componentDidUpdate() {\r\n    //     if (this.state.redirectToHome) {\r\n    //         this.setState({redirectToHome: false})\r\n    //     }\r\n    // }\r\n\r\n    \r\n\r\n    render() {\r\n        const { activeUser } = this.props;\r\n        const { redirectToHome } = this.state;\r\n\r\n        if (redirectToHome) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n\r\n        const signupLink = !activeUser ? <Nav.Link href=\"#/signup\">Signup</Nav.Link> : null;\r\n        const loginLink = !activeUser ? <Nav.Link href=\"#/login\">Login</Nav.Link> : null;\r\n        const logoutLink = activeUser ? <Nav.Link onClick={this.logout}>Logout</Nav.Link> : null;\r\n\r\n\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#/\">Recipe Book</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#/recipes\">Recipes</Nav.Link>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        {signupLink}\r\n                        {loginLink}\r\n                        {logoutLink}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RecipeNavbar;","import React from 'react'\r\nimport {Jumbotron, Button, Container} from 'react-bootstrap'\r\nimport RecipeNavbar from '../components/RecipeNavbar';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        const { activeUser, handleLogout } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <RecipeNavbar activeUser={activeUser} handleLogout={handleLogout}/>\r\n                <Jumbotron>\r\n                    <Container>\r\n                        <h1 className=\"display-3\">Recipe Book</h1>\r\n                        <p>Master your recipes</p>\r\n                        <p>\r\n                            <Button variant=\"primary\" href=\"#/login\">Login</Button>\r\n                        </p>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            invalidLogin: false,\r\n            successLogin: false\r\n        }\r\n\r\n        this.emailInput = React.createRef();\r\n        this.pwdInput = React.createRef();\r\n\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    login() {\r\n\r\n        const { users } = this.props;\r\n        let newActiveUser = null;\r\n        for (let i = 0; i < users.length && !newActiveUser; i++) {\r\n            if (users[i].email === this.emailInput.current.value &&\r\n                users[i].pwd === this.pwdInput.current.value) {\r\n                    newActiveUser = users[i];\r\n                }\r\n        }\r\n\r\n        if (newActiveUser) {\r\n            this.props.handleLogin(newActiveUser);\r\n            this.setState({successLogin: true});\r\n\r\n        } else {\r\n            this.setState({invalidLogin: true});\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.successLogin) {\r\n            return <Redirect to=\"/recipes\"/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"login\">\r\n                <h1>Login to Recipe Book</h1>\r\n                <p>or <a href=\"#/signup\">create an account</a></p>\r\n                <Alert variant=\"danger\" show={this.state.invalidLogin}>\r\n                    Invalid email or password!\r\n                </Alert>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control ref={this.emailInput} type=\"email\" placeholder=\"Enter email\"/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control ref={this.pwdInput}  type=\"password\" placeholder=\"Password\"/>\r\n                    </Form.Group>\r\n                    <Button variant=\"success\" type=\"button\" block onClick={this.login}>\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\n\r\nclass RecipeCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { }\r\n    }\r\n    render() {\r\n        const { recipe } = this.props;\r\n        return (\r\n            <Card className=\"recipe\">\r\n                <Card.Img variant=\"top\" src={recipe.img} />\r\n                <Card.Body>\r\n                    <Card.Title>{recipe.name}</Card.Title>\r\n                    <Card.Text>\r\n                        {recipe.desc}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default RecipeCard;","import React from 'react'\r\nimport RecipeNavbar from '../components/RecipeNavbar'\r\nimport { Container, Row, Col, Button, Modal, Form } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport RecipeCard from '../components/RecipeCard'\r\n\r\n\r\nclass RecipesPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false\r\n        }\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.createRecipe = this.createRecipe.bind(this);\r\n\r\n\r\n        this.nameInput = React.createRef();\r\n        this.descInput = React.createRef();\r\n        this.imgInput = React.createRef();\r\n    }\r\n\r\n\r\n    openModal() {\r\n        this.setState({ showModal: true })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    createRecipe() {\r\n        const newRecipe = {\r\n            name: this.nameInput.current.value,\r\n            desc: this.descInput.current.value,\r\n            img: this.imgInput.current.value,\r\n        }\r\n\r\n        this.props.addRecipe(newRecipe);\r\n        this.closeModal();\r\n    }\r\n\r\n    render() {\r\n        const { activeUser, handleLogout, recipes } = this.props;\r\n        const { showModal } = this.state;\r\n        //const showModal = this.state.showModal;\r\n\r\n        if (!activeUser) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        const recipesCards = recipes.map(recipe => <Col key={recipe.id} lg=\"3\" md=\"6\"><RecipeCard recipe={recipe} /></Col>)\r\n\r\n        return (\r\n            <div>\r\n                <RecipeNavbar activeUser={activeUser} handleLogout={handleLogout} />\r\n                <Container>\r\n                    <div className=\"recipes-header\">\r\n                        <h1>{activeUser.fname}'s Recipes</h1>\r\n                        <Button variant=\"primary\" onClick={this.openModal}>New Recipe</Button>\r\n                    </div>\r\n                    <Row>\r\n                        {recipesCards}\r\n                    </Row>\r\n                </Container>\r\n\r\n\r\n                <Modal show={showModal} onHide={this.closeModal} size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>New Recipe</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                                <Form.Label column sm={2}>\r\n                                    Name\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Control ref={this.nameInput} type=\"text\" placeholder=\"Recipe name\" />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                <Form.Label column sm={2}>\r\n                                    Description\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Control ref={this.descInput} type=\"text\" placeholder=\"Recipe description\" />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                <Form.Label column sm={2}>\r\n                                    Image URL\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Control ref={this.imgInput} type=\"text\" placeholder=\"Recipe image URL\" />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.createRecipe}>\r\n                            Create Recipe\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RecipesPage;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport HomePage from './pages/HomePage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RecipesPage from './pages/RecipesPage';\r\nimport jsonUsers from './data/users'\r\nimport jsonRecipes from './data/recipes'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeUser: null,\r\n    //   activeUser:   {\r\n    //     \"id\": 1,\r\n    //     \"fname\": \"Nir\",\r\n    //     \"lname\": \"Channes\",\r\n    //     \"email\": \"nir@nir.com\",\r\n    //     \"pwd\": \"123\"\r\n    // },\r\n      allUsers: jsonUsers,\r\n      allRecipes: jsonRecipes,\r\n      activeUserRecipes: []\r\n      // hack for starting with my recipes\r\n      // activeUserRecipes: jsonRecipes.filter(recipe => recipe.userId === 1)\r\n    }\r\n\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.addRecipe = this.addRecipe.bind(this);\r\n\r\n    console.log(this.state.allRecipes);\r\n  }\r\n\r\n  handleLogout() {\r\n    this.setState({activeUser: null});\r\n  }\r\n\r\n  handleLogin(activeUser) {\r\n\r\n    const activeUserRecipes = this.state.allRecipes.filter(recipe => recipe.userId === activeUser.id)\r\n\r\n    this.setState({activeUser, activeUserRecipes});\r\n  }\r\n\r\n  addRecipe(newRecipe) {\r\n    //const {activeUser, allRecipes, activeUserRecipes} this.state.activeUser\r\n    // 1) add id and user to the recipe\r\n    newRecipe.userId = this.state.activeUser.id;\r\n    newRecipe.id = this.state.allRecipes[this.state.allRecipes.length - 1].id + 1;\r\n\r\n    // 2) update all recipes and active user recipes\r\n    const allRecipes = this.state.allRecipes.concat(newRecipe);\r\n    const activeUserRecipes = this.state.activeUserRecipes.concat(newRecipe);\r\n\r\n    this.setState({allRecipes, activeUserRecipes});\r\n  }\r\n\r\n  render() {\r\n\r\n    const { activeUser, allUsers, activeUserRecipes } = this.state;\r\n    // const activeUser = this.state.activeUser;\r\n\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <HomePage activeUser={activeUser} handleLogout={this.handleLogout}/>\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <LoginPage users={allUsers} handleLogin={this.handleLogin}/>\r\n        </Route>\r\n        <Route path=\"/recipes\">\r\n          <RecipesPage recipes={activeUserRecipes} activeUser={activeUser} handleLogout={this.handleLogout} addRecipe={this.addRecipe}/>\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}